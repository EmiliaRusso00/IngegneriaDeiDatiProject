{
    "id_table_1": {
        "caption": " Table 1 : Comparison among LMQL, Guidance, and SGLang. The backends marked with ∗ are experimental. ",
        "table": [
            [
                "<td class=\"ltx_td ltx_align_left\" id=\"S2.T1.2.5.2.1\">\n        <span class=\"ltx_text\" id=\"S2.T1.2.5.2.1.1\" style=\"font-size:80%;\">\n         Guidance\n        </span>\n       </td>\n       ",
                "<td class=\"ltx_td ltx_align_left\" id=\"S2.T1.2.5.2.2\">\n        <span class=\"ltx_text\" id=\"S2.T1.2.5.2.2.1\" style=\"font-size:80%;\">\n         Python\n        </span>\n       </td>\n       ",
                "<td class=\"ltx_td ltx_align_left\" id=\"S2.T1.2.5.2.3\">\n        <span class=\"ltx_text\" id=\"S2.T1.2.5.2.3.1\" style=\"font-size:80%;\">\n         extend, gen, select\n        </span>\n       </td>\n       ",
                "<td class=\"ltx_td ltx_align_left\" id=\"S2.T1.2.5.2.4\">\n        <span class=\"ltx_text\" id=\"S2.T1.2.5.2.4.1\" style=\"font-size:80%;\">\n         Hugging Face Transformers, llama.cpp, OpenAI, VertexAI\n        </span>\n       </td>\n       ",
                "<td class=\"ltx_td ltx_align_left\" id=\"S2.T1.2.5.2.5\">\n        <span class=\"ltx_text\" id=\"S2.T1.2.5.2.5.1\" style=\"font-size:80%;\">\n         Interpreter\n        </span>\n       </td>\n      "
            ],
            [
                "<td class=\"ltx_td ltx_align_left ltx_border_bb ltx_border_t\" id=\"S2.T1.2.2.3\">\n        <span class=\"ltx_text\" id=\"S2.T1.2.2.3.1\" style=\"font-size:80%;\">\n         SGLang\n        </span>\n       </td>\n       ",
                "<td class=\"ltx_td ltx_align_left ltx_border_bb ltx_border_t\" id=\"S2.T1.2.2.4\">\n        <span class=\"ltx_text\" id=\"S2.T1.2.2.4.1\" style=\"font-size:80%;\">\n         Python\n        </span>\n       </td>\n       ",
                "<td class=\"ltx_td ltx_align_left ltx_border_bb ltx_border_t\" id=\"S2.T1.2.2.5\">\n        <span class=\"ltx_text\" id=\"S2.T1.2.2.5.1\" style=\"font-size:80%;\">\n         extend, gen, select, fork, join\n        </span>\n       </td>\n       ",
                "<td class=\"ltx_td ltx_align_left ltx_border_bb ltx_border_t\" id=\"S2.T1.2.2.2\">\n        <span class=\"ltx_text\" id=\"S2.T1.2.2.2.1\" style=\"font-size:80%;\">\n         SGVM, OpenAI, Anthropic, Hugging Face TGI\n        </span>\n        <sup class=\"ltx_sup\" id=\"S2.T1.2.2.2.2\">\n         <span class=\"ltx_text\" id=\"S2.T1.2.2.2.2.1\" style=\"font-size:80%;\">\n          ∗\n         </span>\n        </sup>\n        <span class=\"ltx_text\" id=\"S2.T1.2.2.2.3\" style=\"font-size:80%;\">\n         , llama.cpp\n        </span>\n        <sup class=\"ltx_sup\" id=\"S2.T1.2.2.2.4\">\n         <span class=\"ltx_text\" id=\"S2.T1.2.2.2.4.1\" style=\"font-size:80%;\">\n          ∗\n         </span>\n        </sup>\n       </td>\n       ",
                "<td class=\"ltx_td ltx_align_left ltx_border_bb ltx_border_t\" id=\"S2.T1.2.2.6\">\n        <span class=\"ltx_text\" id=\"S2.T1.2.2.6.1\" style=\"font-size:80%;\">\n         Interpreter and compiler\n        </span>\n       </td>\n      "
            ]
        ],
        "footnotes": [],
        "references": [
            "SGLang introduces new primitives for enhanced expressiveness and runtime efficiency. It also offers the flexibility of both interpreter and compiler modes. A comparison among LMQL, Guidance, and SGLang is presented in                  Table 1                . We omit the comparison with LangChain and DSPy because they are at a higher level. It is possible to compile high-level pipelines from LangChain and DSPy to SGLang."
        ]
    }
}